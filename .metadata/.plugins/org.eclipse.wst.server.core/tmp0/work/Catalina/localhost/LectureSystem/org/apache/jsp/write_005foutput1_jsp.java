/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M9
 * Generated at: 2017-05-10 06:26:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class write_005foutput1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=euc-kr\">\r\n");
      out.write("<style type='text/css'>\r\n");
      out.write("<!--\r\n");
      out.write("\ta:link {font-family:\"\";color:black; text-decoration:none;}\r\n");
      out.write("\ta:visited {font-family:\"\";color:black; text-decoration:none;}\r\n");
      out.write("\ta:hover {font-family:\"\";color:black; text-decoration:underline;}\r\n");
      out.write("--!>\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String num = request.getParameter("num");

	Class.forName("com.mysql.jdbc.Driver");
		
	String url = "jdbc:mysql://localhost/odbc";
		
	Connection conn = DriverManager.getConnection(url, "root", "1234");
		
	PreparedStatement pstmt = null;
	ResultSet rs = null;
		
	try{	
		String strSQL = "SELECT * FROM write1 where num = ?";
		pstmt = conn.prepareStatement(strSQL);
		pstmt.setInt(1, Integer.parseInt(num));
		
		rs = pstmt.executeQuery();
		rs.next();
		
		String name = rs.getString("name");
		String title = rs.getString("title");
		String contents = rs.getString("contents").trim();
		String writedate = rs.getString("writedate");
		int readcount = rs.getInt("readcount");

      out.write("\r\n");
      out.write("\t<center><font size='3'><b>자료공유</b></font></center>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' width='600' cellpadding='0' cellspacing='0'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><hr size='1' noshade>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' width='600'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align='left'>\r\n");
      out.write("\t\t\t\t<font size='2'> 작성자 : ");
      out.print(name );
      out.write("</font>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td align='right'>\r\n");
      out.write("\t\t\t\t<font size='2'> 작성일 : ");
      out.print(writedate );
      out.write("</font>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<table border='0' cellspacing=3 cellpadding=3 width='600'>\r\n");
      out.write("\t\t<tr bgcolor='cccccc'>\r\n");
      out.write("\t\t\t<td align='center'>\r\n");
      out.write("\t\t\t\t<font size='3'><b>");
      out.print(title );
      out.write("</b></font>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\t\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' cellspacing=5 cellpadding=10 width='600'>\r\n");
      out.write("\t\t<tr bgcolor='ededed'>\r\n");
      out.write("\t\t\t<td><font size='3' color=''>");
      out.print(contents );
      out.write("</font>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' width='600'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align='right'>\r\n");
      out.write("\t\t\t\t<font size='2'><br><font size='2'></font>\r\n");
      out.write("\t\t\t</font></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' width='600' cellpadding='0' cellspacing='0'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><hr size='1' noshade>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border='0' width='600'>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align='right'>\r\n");
      out.write("\t\t\t\t<a href='write1.jsp'>[글쓰기]</a>\r\n");
      out.write("\t\t\t\t<a href='listboard.jsp'>[목록보기]</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t");

		strSQL = "UPDATE write1 SET readcount=readcount+readcount+1 where num = ?";
		pstmt.setInt(1, Integer.parseInt(num));
		pstmt.executeUpdate();
	
		
	}catch(SQLException e){
		out.print("SQL에러 " + e.toString());
	}catch(Exception ex) {
		out.print("JSP에러 " + ex.toString());
	}finally {
		rs.close();
		pstmt.close();
		conn.close();
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
